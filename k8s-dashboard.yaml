apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: 2017-02-08T07:37:06Z
  generation: 4
  labels:
    app: k8s-dashboard-test
    version: test
  name: k8s-dashboard-canary-test
  namespace: kube-system
  resourceVersion: "2016918749"
  selfLink: /api/v1/namespaces/kube-system/replicationcontrollers/k8s-dashboard-canary-test
  uid: 644cf86f-edd1-11e6-8fae-ca5a43614a04
spec:
  replicas: 1
  selector:
    app: k8s-dashboard-test
    version: test
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: k8s-dashboard-test
        version: test
    spec:
      containers:
      - args:
        - --kubeconfig=/etc/kubernetes/dns-config
        image: 127.0.0.1:30100/google_containers/dashboard:2017-02-07_16-57
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: k8s-dashboard-canary-test
        ports:
        - containerPort: 9090
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes/dns-config
          name: kubeconfig
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/kubernetes/dns-config
        name: kubeconfig
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
